{"version":3,"sources":["reducers/userReducer.js","reducers/notificationReducer.js","components/Menu.js","services/blogs.js","reducers/blogReducer.js","components/Blog.js","components/BlogList.js","components/Notification.js","services/login.js","components/LoginForm.js","components/Toggleable.js","components/BlogForm.js","components/User.js","components/UserTable.js","components/UserDetails.js","components/BlogDetails.js","services/users.js","App.js","components/store.js","index.js"],"names":["setUser","user","dispatch","type","data","userReducer","state","action","initialState","text","timerId","undefined","clearNotification","className","setNotification","timer","setTimeout","notificationReducer","clearTimeout","Menu","useDispatch","handleLogout","event","window","localStorage","removeItem","loggedOutUser","name","username","padding","paddingRight","style","background","position","top","overflow","width","to","onClick","baseUrl","token","getAll","a","axios","get","response","getOne","id","setToken","newToken","create","newObject","config","headers","Authorization","post","updateOne","modifiedBlogObject","put","addComment","blogObject","comment","remove","delete","addLike","blogService","blogToChange","likes","changedBlog","error","console","log","deleteBlog","blogToRemove","title","blogReducer","concat","sort","b","find","blog","map","blogToComment","commentedBlog","comments","filter","Blog","currentUser","paddingTop","paddingLeft","paddingBottom","border","borderWidth","marginBottom","author","confirm","display","color","BlogList","blogs","useSelector","key","blogId","removeBlog","Notification","notification","marginTop","login","credentials","LoginForm","useState","setUsername","password","setPassword","handleLogin","loginService","responseUser","setItem","JSON","stringify","onSubmit","preventDefault","toLocaleLowerCase","value","onChange","target","Toggleable","forwardRef","props","ref","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","BlogForm","blogFormRef","useRef","setTitle","setAuthor","url","setUrl","current","returnedBlog","User","numberOfBlogs","userId","UserTable","users","length","UserDetails","targetUser","BlogDetails","targetBlog","setComment","href","push","index","App","setUsers","useEffect","userService","usersResponse","fetchUsers","matchUser","useRouteMatch","params","matchBlog","loggedUserJSON","getItem","loggedUser","parse","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f84b03c9.chunk.js","sourcesContent":["const userReducer = (state=null, action) => {\r\n  switch(action.type) {\r\n    case 'SET_USER':\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'SET_USER',\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport default userReducer","const initialState = {\r\n  text: null,\r\n  timerId: undefined,\r\n}\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'NOTIFICATION':\r\n      clearTimeout(state.timerId)\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst clearNotification = {\r\n  type: 'NOTIFICATION',\r\n  data: {\r\n    text: null,\r\n    className: 'notification',\r\n    timerId: undefined,\r\n  }\r\n}\r\n\r\nexport const setNotification = (text, className, timer=5) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'NOTIFICATION',\r\n      data: {\r\n        text,\r\n        className,\r\n        timerId: setTimeout(() => dispatch(clearNotification), timer * 1000)\r\n      },\r\n    })\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { setUser } from '../reducers/userReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst Menu = ({ user }) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogout = (event) => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    const loggedOutUser = user.name ? user.name : user.username\r\n    dispatch(setUser(null))\r\n    dispatch(setNotification(`${loggedOutUser} logged out`, 'notification'))\r\n  }\r\n\r\n  const UserDisplay = () => {\r\n    if (user) {\r\n      const name = user.name ? user.name : user.username\r\n      return (\r\n        <>\r\n          {name} logged-in <button onClick={handleLogout}>logout</button>\r\n        </>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const padding={\r\n    paddingRight: 5\r\n  }\r\n\r\n  const navBar={\r\n    background: 'lightgrey',\r\n    position: 'fixed',\r\n    top: '0',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  }\r\n\r\n  return (\r\n    <div style={navBar}>\r\n      <Link style={padding} to='/'>blogs</Link>\r\n      <Link style={padding} to='/users'>users</Link>\r\n      <em><UserDisplay /></em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getOne = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst updateOne = async (modifiedBlogObject) => {\r\n  const response = await axios.put(`${baseUrl}/${modifiedBlogObject.id}`, modifiedBlogObject)\r\n  return response.data\r\n}\r\n\r\nconst addComment = async (blogObject, comment) => {\r\n  const response = await axios.post(`${baseUrl}/${blogObject.id}/comments`, {comment: comment})\r\n  return response.data\r\n}\r\n\r\nconst remove = async (blogObject) => {\r\n  // will need to have the proper user token\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${blogObject.id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, getOne, setToken, create, updateOne, addComment, remove }","import blogService from '../services/blogs'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch(action.type) {\r\n    case 'INIT_BLOGS':\r\n      return state.concat(action.data).sort((a, b) => b.likes - a.likes)\r\n    case 'ADD_BLOG':\r\n      return state.concat(action.data)\r\n    case 'LIKE':\r\n      const blogToChange = state.find(blog => blog.id === action.data.id)\r\n      const changedBlog = {\r\n        ...blogToChange,\r\n        likes: blogToChange.likes + 1\r\n      }\r\n      return state\r\n        .map(blog => blog.id !== action.data.id ? blog : changedBlog)\r\n        .sort((a, b) => b.likes - a.likes)\r\n    case 'COMMENT':\r\n      const blogToComment = state.find(blog => blog.id === action.data.id)\r\n      const commentedBlog = {\r\n        ...blogToComment,\r\n        comments: action.data.comments\r\n      }\r\n      return state\r\n        .map(blog => blog.id !== action.data.id ? blog : commentedBlog)\r\n    case 'REMOVE':\r\n      return state\r\n        .filter(blog => blog.id !== action.data.id)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blogObject) => {\r\n  return async dispatch => {\r\n    try {\r\n      const returnedBlog = await blogService.create(blogObject)\r\n      dispatch({\r\n        type: 'ADD_BLOG',\r\n        data: returnedBlog,\r\n      })\r\n      dispatch(setNotification(\r\n        `A new blog ${returnedBlog.title} by ${returnedBlog.author} added`,\r\n        'notification'\r\n      ))\r\n    } catch (exception) {\r\n      dispatch(setNotification(exception.response.data.error, 'error', 7))\r\n      console.log(exception.response.data.error)\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nexport const addLike = (id) => {\r\n  return async dispatch => {\r\n    try{\r\n      const blogToChange = await blogService.getOne(id)\r\n      blogToChange.likes += 1\r\n      const changedBlog = await blogService.updateOne(blogToChange)\r\n      dispatch({\r\n        type: 'LIKE',\r\n        data: changedBlog,\r\n      })\r\n    } catch (exception) {\r\n      dispatch(setNotification(exception.response.data.error, 'error', 7))\r\n      console.log(exception.response.data.error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (id) => {\r\n  return async dispatch => {\r\n    try {\r\n      const blogToRemove = await blogService.getOne(id)\r\n      await blogService.remove(blogToRemove)\r\n      dispatch({\r\n        type: 'REMOVE',\r\n        data: blogToRemove\r\n      })\r\n      dispatch(setNotification(\r\n        `Blog ${blogToRemove.title} has been removed`, 'notification'))\r\n    } catch (exception) {\r\n      dispatch(setNotification(exception.response.data.error, 'error', 7))\r\n      console.log(exception.response.data.error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const addComment = (id, comment) => {\r\n  return async dispatch => {\r\n    try {\r\n      const blogToChange = await blogService.getOne(id)\r\n      blogToChange.comments.push(comment)\r\n      const changedBlog = await blogService.addComment(blogToChange, comment)\r\n      dispatch({\r\n        type: 'COMMENT',\r\n        data: changedBlog,\r\n      })\r\n    } catch (exception) {\r\n      dispatch(setNotification(exception.response.data.error, 'error', 7))\r\n      console.log(exception.response.data.error)\r\n    }\r\n  }\r\n}\r\n\r\nexport default blogReducer","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { addLike, deleteBlog } from '../reducers/blogReducer'\r\n\r\nconst Blog = ({ blog, currentUser }) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const updateLikes = () => {\r\n    dispatch(addLike(blog.id))\r\n  }\r\n\r\n  const callRemoveBlog = () => {\r\n    if (window.confirm(\r\n      `Do you really want to delete ${blog.title}, by ${blog.author}?`\r\n    )) {\r\n      dispatch(deleteBlog(blog.id))\r\n    }\r\n  }\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    paddingBottom: 10,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  return(\r\n    <div style={blogStyle}>\r\n      <Link to={`/blogs/${blog.id}`}>{`${blog.title}, by ${blog.author}`}</Link>\r\n      <button\r\n        onClick={callRemoveBlog}\r\n        style={{\r\n            display: currentUser.username === blog.user.username ? '' : 'none',\r\n            background: 'red',\r\n            color: 'blue'\r\n        }}\r\n        >x\r\n      </button>\r\n      <br />\r\n      {blog.likes} like(s)\r\n      <button onClick={updateLikes}>\r\n        updoot\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { addLike, deleteBlog } from '../reducers/blogReducer'\r\n\r\nimport Blog from './Blog'\r\n\r\nconst BlogList = ({ user }) => {\r\n\r\n  const blogs = useSelector(state => {\r\n    return state.blogs.sort((a, b) => b.likes - a.likes)\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  return(\r\n    blogs.map(blog => \r\n      <Blog\r\n        key={blog.id}\r\n        blog={blog}\r\n        addLike={(blogId) => dispatch(addLike(blogId))}\r\n        removeBlog={(blogId) => dispatch(deleteBlog(blogId))}\r\n        currentUser={user}\r\n        />\r\n      )\r\n  )\r\n}\r\n\r\nexport default BlogList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n\r\n    const notification = useSelector(state => state.notification)\r\n    const style = {\r\n        border: 'solid',\r\n        padding: 10,\r\n        marginTop: 30,\r\n        borderWidth: 1\r\n      }\r\n\r\n    return (notification.text\r\n      ? (\r\n        <div style={style} className={notification.className}>\r\n          {notification.text}\r\n        </div>\r\n      )\r\n      : null\r\n    )\r\n      \r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { setUser } from '../reducers/userReducer'\r\n\r\nconst LoginForm = () => {\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogin = async (username, password) => {\r\n\r\n    try {\r\n      const responseUser = await loginService.login({\r\n        username, password\r\n      })\r\n  \r\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(responseUser))\r\n      blogService.setToken(responseUser.token)\r\n      dispatch(setUser(responseUser))\r\n      dispatch(setNotification(\r\n        `${responseUser.name ? responseUser.name : responseUser.username} successfully logged in`,\r\n        'notification'\r\n        )\r\n      )\r\n  \r\n    } catch (exception) {\r\n      dispatch(setNotification(exception.response.data.error, 'error', 10))\r\n      console.log(exception.response.data.error)\r\n    }\r\n  }\r\n\r\n  const loginUser = (event) => {\r\n    event.preventDefault()\r\n    handleLogin(username.toLocaleLowerCase(), password)\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={loginUser}>\r\n      <h2>log in to blog application</h2>\r\n      <div>\r\n        username\r\n        <input\r\n          type='text'\r\n          value={username}\r\n          name='Username'\r\n          onChange={(event) => setUsername(event.target.value)}\r\n          />\r\n      </div>\r\n      <div>\r\n        password\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          name='Password'\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n      </div>\r\n      <button type='submit'>login</button>\r\n      <div>\r\n        Feel free to login with the following credentials:\r\n        <ul>\r\n          <li>\r\n            Username: guest\r\n          </li>\r\n          <li>\r\n            Password: gimmieblogs\r\n          </li>\r\n        </ul>\r\n        Also, please don't save anything too weird while you are here!\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nexport default LoginForm","import React, { useState, useImperativeHandle, forwardRef } from 'react'\r\n\r\nconst Toggleable = forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div style={{paddingBottom: 10}}>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Toggleable","import React, { useState, useRef } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createBlog } from '../reducers/blogReducer'\r\nimport Toggleable from '../components/Toggleable'\r\n\r\nconst BlogForm = () => {\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    blogFormRef.current.toggleVisibility()\r\n    dispatch(createBlog({\r\n      title: title === '' ? undefined : title,\r\n      author: author === '' ? undefined : author,\r\n      url: url === '' ? undefined : url,\r\n      })\r\n    )\r\n\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n  return (\r\n    <Toggleable buttonLabel='create new blog entry' ref={blogFormRef}>\r\n    <div>\r\n      <h2>Create new entry</h2>\r\n      <form onSubmit={addBlog}>\r\n        <div>\r\n          title:\r\n          <input\r\n            type='text'\r\n            value={title}\r\n            name='Title'\r\n            onChange={(event) => setTitle(event.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author:\r\n          <input\r\n            type='text'\r\n            value={author}\r\n            name='Author'\r\n            onChange={(event) => setAuthor(event.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          url:\r\n          <input\r\n            type='url'\r\n            value={url}\r\n            name='Url'\r\n            onChange={(event) => setUrl(event.target.value)}\r\n          />\r\n        </div>\r\n        <button type='submit'>create entry</button>\r\n      </form>\r\n    </div>\r\n    </Toggleable>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst User = ({ username, numberOfBlogs, userId }) => {\r\n  return(\r\n    <tr>\r\n      <td>\r\n        <Link to={`/users/${userId}`}>{username}</Link>\r\n      </td>\r\n      <td>\r\n        {numberOfBlogs}\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport User from './User'\r\n\r\nconst UserTable = ({ users }) => {\r\n\r\n  return(\r\n    <>\r\n      <h2>\r\n        Users\r\n      </h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              username\r\n            </th>\r\n            <th>\r\n              blogs created\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user => \r\n            <User\r\n              key={user.id}\r\n              username={user.username}\r\n              numberOfBlogs={user.blogs.length}\r\n              userId={user.id}\r\n              />\r\n        )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default UserTable","import React from 'react'\r\n\r\nconst UserDetails = ({ targetUser }) => {\r\n\r\n  if (!targetUser) {\r\n    return (\r\n      <h2>\r\n        user not found\r\n      </h2>\r\n    )\r\n  } else {\r\n    return(\r\n      <>\r\n        <h2>\r\n          {targetUser.name ? targetUser.name : targetUser.username}\r\n        </h2>\r\n        <h3>\r\n          added blogs\r\n        </h3>\r\n        <ul>\r\n          {targetUser.blogs.map(blog => \r\n            <li key={blog.id}>\r\n              {blog.title}\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default UserDetails","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { addLike, deleteBlog, addComment } from '../reducers/blogReducer'\r\n\r\nconst BlogDetails = ({ targetBlog, currentUser }) => {\r\n\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const updateLikes = () => {\r\n    dispatch(addLike(targetBlog.id))\r\n  }\r\n\r\n  const callRemoveBlog = () => {\r\n    if (window.confirm(\r\n      `Do you really want to delete ${targetBlog.title}, by ${targetBlog.author}?`\r\n    )) {\r\n      dispatch(deleteBlog(targetBlog.id))\r\n    }\r\n  }\r\n\r\n  const handleComment = (event) => {\r\n    event.preventDefault()\r\n    dispatch(addComment(targetBlog.id, comment))\r\n    setComment('')\r\n  }\r\n\r\n  if (!targetBlog) {\r\n    return (\r\n      <h2>\r\n        blog not found\r\n      </h2>\r\n    )\r\n  } else {\r\n    return(\r\n      <div>\r\n        <h2>\r\n          {targetBlog.title}\r\n        </h2>\r\n        <p>\r\n          <a href={targetBlog.url}>{targetBlog.url}</a>\r\n          <br />\r\n          {targetBlog.likes} likes <button onClick={updateLikes}>updoot</button>\r\n          <br />\r\n          added by {targetBlog.user.name\r\n            ? targetBlog.user.name\r\n            : targetBlog.user.username\r\n            }\r\n          <br />\r\n          <button\r\n            onClick={callRemoveBlog}\r\n            style={\r\n              {display: currentUser.username === targetBlog.user.username\r\n                ? ''\r\n                : 'none'}\r\n            }\r\n            >remove blog\r\n          </button>\r\n        </p>\r\n        <h3>\r\n          Comments\r\n        </h3>\r\n        <form onSubmit={handleComment}>\r\n          <input\r\n            type='text'\r\n            value={comment}\r\n            name='Comment'\r\n            onChange={(event) => setComment(event.target.value)}/>\r\n          <button>add comment</button>\r\n        </form>\r\n        <ul>\r\n          {targetBlog.comments.map((comment, index) => {\r\n            return(\r\n              <li key={index}>\r\n                {comment}\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogDetails","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getOne = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, getOne }","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n} from 'react-router-dom'\r\n\r\nimport Menu from './components/Menu'\r\nimport BlogList from './components/BlogList'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport UserTable from './components/UserTable'\r\nimport UserDetails from './components/UserDetails'\r\nimport BlogDetails from './components/BlogDetails'\r\n\r\nimport blogService from './services/blogs'\r\nimport userService from './services/users'\r\n\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { setUser } from './reducers/userReducer'\r\n\r\nconst App = () => {\r\n\r\n  const [users, setUsers] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const usersResponse = await userService.getAll()\r\n      setUsers(usersResponse)\r\n  }\r\n    fetchUsers()\r\n  }, [])\r\n\r\n  const matchUser = useRouteMatch('/users/:id')\r\n  const targetUser = matchUser\r\n    ? users.find(user => {\r\n        return(user.id === matchUser.params.id)\r\n      })\r\n    : null\r\n\r\n  let blogs = useSelector(state => state.blogs)\r\n  \r\n  const matchBlog = useRouteMatch('/blogs/:id')\r\n  const targetBlog = matchBlog\r\n    ? blogs.find(blog => {\r\n      return(blog.id === matchBlog.params.id)\r\n    })\r\n    : null\r\n\r\n  let user = useSelector(state => state.user)\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const loggedUser = JSON.parse(loggedUserJSON)\r\n      dispatch(setUser(loggedUser))\r\n      blogService.setToken(loggedUser.token)\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div>\r\n      <Menu user={user} />\r\n      <Notification />\r\n      <div>\r\n        {!user &&\r\n          <LoginForm />\r\n        }\r\n        {user &&\r\n          <>\r\n            <h2>Blog App</h2>\r\n            <Switch>\r\n              <Route path='/users/:id'>\r\n                <UserDetails targetUser={targetUser} />\r\n              </Route>\r\n              <Route path='/users'>\r\n                <UserTable users={users}/>\r\n              </Route>\r\n              <Route path='/blogs/:id'>\r\n                <BlogDetails targetBlog={targetBlog} currentUser={user} />\r\n              </Route>\r\n              <Route path='/'>\r\n                <BlogForm />\r\n                <BlogList user={user} />\r\n              </Route>\r\n            </Switch>\r\n          </>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport blogReducer from '../reducers/blogReducer'\r\nimport notificationReducer from '../reducers/notificationReducer'\r\nimport userReducer from '../reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notification: notificationReducer,\r\n  user: userReducer,\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport App from './App'\r\nimport store from './components/store'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root'))"],"sourceRoot":""}