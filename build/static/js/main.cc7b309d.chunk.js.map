{"version":3,"sources":["reducers/userReducer.js","reducers/notificationReducer.js","components/Menu.js","services/blogs.js","reducers/blogReducer.js","components/Blog.js","components/BlogList.js","components/Notification.js","services/login.js","components/LoginForm.js","components/Toggleable.js","components/BlogForm.js","components/User.js","components/UserTable.js","components/UserDetails.js","components/BlogDetails.js","services/users.js","App.js","components/store.js","index.js"],"names":["setUser","user","dispatch","type","data","userReducer","state","action","initialState","text","timerId","undefined","clearNotification","className","setNotification","timer","setTimeout","notificationReducer","clearTimeout","Menu","useDispatch","history","useHistory","handleLogout","event","window","localStorage","removeItem","loggedOutUser","name","username","push","AppBar","position","Toolbar","Button","color","component","Link","to","onClick","baseUrl","token","getAll","a","axios","get","response","getOne","id","setToken","newToken","create","newObject","config","headers","Authorization","post","updateOne","modifiedBlogObject","put","addComment","blogObject","comment","remove","delete","addLike","blogService","blogToChange","likes","changedBlog","error","console","log","deleteBlog","blogToRemove","title","blogReducer","concat","sort","b","find","blog","map","blogToComment","commentedBlog","comments","filter","Blog","currentUser","author","IconButton","confirm","aria-label","style","display","float","variant","BlogList","blogs","useSelector","key","blogId","removeBlog","Notification","notification","alertType","Alert","severity","login","credentials","LoginForm","useState","setUsername","password","setPassword","handleLogin","loginService","responseUser","setItem","JSON","stringify","onSubmit","preventDefault","toLocaleLowerCase","TextField","label","value","onChange","target","Toggleable","forwardRef","props","ref","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","choiceObj","Create","paddingBottom","startIcon","buttonStyle","buttonLabel","children","BlogForm","blogFormRef","useRef","setTitle","setAuthor","url","setUrl","current","returnedBlog","User","numberOfBlogs","userId","TableRow","TableCell","UserTable","users","goBack","TableContainer","Paper","Table","TableHead","TableBody","length","UserDetails","targetUser","BlogDetails","targetBlog","setComment","href","index","App","setUsers","useEffect","userService","usersResponse","fetchUsers","matchUser","useRouteMatch","params","matchBlog","loggedUserJSON","getItem","loggedUser","parse","Container","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc7b309d.chunk.js","sourcesContent":["const userReducer = (state=null, action) => {\r\n  switch(action.type) {\r\n    case 'SET_USER':\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'SET_USER',\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport default userReducer","const initialState = {\r\n  text: null,\r\n  timerId: undefined,\r\n}\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'NOTIFICATION':\r\n      clearTimeout(state.timerId)\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst clearNotification = {\r\n  type: 'NOTIFICATION',\r\n  data: {\r\n    text: null,\r\n    className: 'notification',\r\n    timerId: undefined,\r\n  }\r\n}\r\n\r\nexport const setNotification = (text, className, timer=5) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'NOTIFICATION',\r\n      data: {\r\n        text,\r\n        className,\r\n        timerId: setTimeout(() => dispatch(clearNotification), timer * 1000)\r\n      },\r\n    })\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport { AppBar, Toolbar, Button } from '@material-ui/core'\r\n\r\nimport { setUser } from '../reducers/userReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst Menu = ({ user }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleLogout = (event) => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    const loggedOutUser = user.name ? user.name : user.username\r\n    dispatch(setUser(null))\r\n    dispatch(setNotification(`${loggedOutUser} logged out`, 'notification'))\r\n    history.push('/')\r\n  }\r\n\r\n  const UserDisplay = () => {\r\n    if (user) {\r\n      const name = user.name ? user.name : user.username\r\n      return (\r\n        <>\r\n          {name} logged-in\r\n          <Button\r\n          onClick={handleLogout}\r\n          color='secondary'\r\n          >logout</Button>\r\n        </>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <AppBar position='static'>\r\n      <Toolbar>\r\n        <Button color='inherit' component={Link} to='/'>\r\n          blogs\r\n        </Button>\r\n        <Button color='inherit' component={Link} to='/users'>\r\n          users\r\n        </Button>\r\n        <em><UserDisplay /></em>\r\n      </Toolbar>\r\n    </AppBar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getOne = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst updateOne = async (modifiedBlogObject) => {\r\n  const response = await axios.put(`${baseUrl}/${modifiedBlogObject.id}`, modifiedBlogObject)\r\n  return response.data\r\n}\r\n\r\nconst addComment = async (blogObject, comment) => {\r\n  const response = await axios.post(`${baseUrl}/${blogObject.id}/comments`, {comment: comment})\r\n  return response.data\r\n}\r\n\r\nconst remove = async (blogObject) => {\r\n  // will need to have the proper user token\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${blogObject.id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, getOne, setToken, create, updateOne, addComment, remove }","import blogService from '../services/blogs'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch(action.type) {\r\n    case 'INIT_BLOGS':\r\n      return state.concat(action.data).sort((a, b) => b.likes - a.likes)\r\n    case 'ADD_BLOG':\r\n      return state.concat(action.data)\r\n    case 'LIKE':\r\n      const blogToChange = state.find(blog => blog.id === action.data.id)\r\n      const changedBlog = {\r\n        ...blogToChange,\r\n        likes: blogToChange.likes + 1\r\n      }\r\n      return state\r\n        .map(blog => blog.id !== action.data.id ? blog : changedBlog)\r\n        .sort((a, b) => b.likes - a.likes)\r\n    case 'COMMENT':\r\n      const blogToComment = state.find(blog => blog.id === action.data.id)\r\n      const commentedBlog = {\r\n        ...blogToComment,\r\n        comments: action.data.comments\r\n      }\r\n      return state\r\n        .map(blog => blog.id !== action.data.id ? blog : commentedBlog)\r\n    case 'REMOVE':\r\n      return state\r\n        .filter(blog => blog.id !== action.data.id)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blogObject) => {\r\n  return async dispatch => {\r\n    try {\r\n      const returnedBlog = await blogService.create(blogObject)\r\n      dispatch({\r\n        type: 'ADD_BLOG',\r\n        data: returnedBlog,\r\n      })\r\n      dispatch(setNotification(\r\n        `A new blog ${returnedBlog.title} by ${returnedBlog.author} added`,\r\n        'notification'\r\n      ))\r\n    } catch (exception) {\r\n      dispatch(setNotification(exception.response.data.error, 'error', 7))\r\n      console.log(exception.response.data.error)\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nexport const addLike = (id) => {\r\n  return async dispatch => {\r\n    try{\r\n      const blogToChange = await blogService.getOne(id)\r\n      blogToChange.likes += 1\r\n      const changedBlog = await blogService.updateOne(blogToChange)\r\n      dispatch({\r\n        type: 'LIKE',\r\n        data: changedBlog,\r\n      })\r\n    } catch (exception) {\r\n      dispatch(setNotification(exception.response.data.error, 'error', 7))\r\n      console.log(exception.response.data.error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (id) => {\r\n  return async dispatch => {\r\n    try {\r\n      const blogToRemove = await blogService.getOne(id)\r\n      await blogService.remove(blogToRemove)\r\n      dispatch({\r\n        type: 'REMOVE',\r\n        data: blogToRemove\r\n      })\r\n      dispatch(setNotification(\r\n        `Blog ${blogToRemove.title} has been removed`, 'notification'))\r\n    } catch (exception) {\r\n      dispatch(setNotification(exception.response.data.error, 'error', 7))\r\n      console.log(exception.response.data.error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const addComment = (id, comment) => {\r\n  return async dispatch => {\r\n    try {\r\n      const blogToChange = await blogService.getOne(id)\r\n      blogToChange.comments.push(comment)\r\n      const changedBlog = await blogService.addComment(blogToChange, comment)\r\n      dispatch({\r\n        type: 'COMMENT',\r\n        data: changedBlog,\r\n      })\r\n    } catch (exception) {\r\n      dispatch(setNotification(exception.response.data.error, 'error', 7))\r\n      console.log(exception.response.data.error)\r\n    }\r\n  }\r\n}\r\n\r\nexport default blogReducer","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { IconButton } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ThumbUp from '@material-ui/icons/ThumbUp'\r\n\r\nimport { addLike, deleteBlog } from '../reducers/blogReducer'\r\n\r\nconst Blog = ({ blog, currentUser }) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const updateLikes = () => {\r\n    dispatch(addLike(blog.id))\r\n  }\r\n\r\n  const callRemoveBlog = () => {\r\n    if (window.confirm(\r\n      `Do you really want to delete ${blog.title}, by ${blog.author}?`\r\n    )) {\r\n      dispatch(deleteBlog(blog.id))\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className='blog'>\r\n      <Link to={`/blogs/${blog.id}`}>{`${blog.title}, by ${blog.author}`}</Link>\r\n      <IconButton\r\n        onClick={callRemoveBlog}\r\n        aria-label='delete'\r\n        color='secondary'\r\n        style={{\r\n            display: currentUser.username === blog.user.username ? '' : 'none',\r\n            float: 'right',\r\n        }}\r\n        >\r\n          <DeleteIcon />\r\n      </IconButton>\r\n      <br />\r\n      {blog.likes} like(s)\r\n      <br />\r\n      <IconButton onClick={updateLikes} variant='contained' color='primary'>\r\n        <ThumbUp/>\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { addLike, deleteBlog } from '../reducers/blogReducer'\r\n\r\nimport Blog from './Blog'\r\n\r\nconst BlogList = ({ user }) => {\r\n\r\n  const blogs = useSelector(state => {\r\n    return state.blogs.sort((a, b) => b.likes - a.likes)\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  return(\r\n    blogs.map(blog => \r\n      <Blog\r\n        key={blog.id}\r\n        blog={blog}\r\n        addLike={(blogId) => dispatch(addLike(blogId))}\r\n        removeBlog={(blogId) => dispatch(deleteBlog(blogId))}\r\n        currentUser={user}\r\n        />\r\n      )\r\n  )\r\n}\r\n\r\nexport default BlogList","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { Alert } from '@material-ui/lab'\r\n\r\nconst Notification = () => {\r\n\r\n  const notification = useSelector(state => state.notification)\r\n\r\n  const alertType = notification.className === 'notification'\r\n    ? 'success'\r\n    : 'error'\r\n\r\n  return (notification.text\r\n    ? (\r\n      <Alert severity={alertType} className={notification.className}>\r\n        {notification.text}\r\n      </Alert>\r\n    )\r\n    : null\r\n  )\r\n      \r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { TextField, Button } from '@material-ui/core'\r\n\r\nimport loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\n\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { setUser } from '../reducers/userReducer'\r\n\r\nconst LoginForm = () => {\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogin = async (username, password) => {\r\n\r\n    try {\r\n      const responseUser = await loginService.login({\r\n        username, password\r\n      })\r\n  \r\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(responseUser))\r\n      blogService.setToken(responseUser.token)\r\n      dispatch(setUser(responseUser))\r\n      dispatch(setNotification(\r\n        `${responseUser.name ? responseUser.name : responseUser.username} successfully logged in`,\r\n        'notification'\r\n        )\r\n      )\r\n  \r\n    } catch (exception) {\r\n      dispatch(setNotification(exception.response.data.error, 'error', 10))\r\n      console.log(exception.response.data.error)\r\n    }\r\n  }\r\n\r\n  const loginUser = (event) => {\r\n    event.preventDefault()\r\n    handleLogin(username.toLocaleLowerCase(), password)\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <form className='loginForm' onSubmit={loginUser}>\r\n      <h2>log in to blog application</h2>\r\n      <div>\r\n        <TextField \r\n          label='username'\r\n          value={username}\r\n          variant='filled'\r\n          onChange={(event) => setUsername(event.target.value)}\r\n        />\r\n      </div>\r\n      <br/>\r\n      <div>\r\n        <TextField\r\n          label='password'\r\n          value={password}\r\n          variant='filled'\r\n          type='password' \r\n          onChange={(event) => setPassword(event.target.value)}\r\n        />\r\n      </div>\r\n      <br/>\r\n      <Button variant='contained' color='primary' type='submit'>login</Button>\r\n      <div>\r\n        <br/>\r\n        Feel free to login with the following credentials:\r\n        <ul>\r\n          <li>\r\n            Username: guest\r\n          </li>\r\n          <li>\r\n            Password: gimmieblogs\r\n          </li>\r\n        </ul>\r\n        Also, please don't save anything too weird while you are here!\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nexport default LoginForm","import React, { useState, useImperativeHandle, forwardRef } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Create from '@material-ui/icons/Create'\r\nimport Cancel from '@material-ui/icons/Cancel'\r\n\r\nconst Toggleable = forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  const choiceObj = {\r\n    Create: <Create />\r\n  }\r\n\r\n  return (\r\n    <div style={{paddingBottom: 10}}>\r\n      <div style={hideWhenVisible}>\r\n        <Button\r\n          onClick={toggleVisibility}\r\n          startIcon={choiceObj[props.buttonStyle]}\r\n        >\r\n          {props.buttonLabel}\r\n        </Button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <Button\r\n          onClick={toggleVisibility}\r\n          startIcon={<Cancel />}\r\n          color='secondary'\r\n        >\r\n          cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Toggleable","import React, { useState, useRef } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { Button, TextField } from '@material-ui/core'\r\nimport Create from '@material-ui/icons/Create'\r\n\r\nimport { createBlog } from '../reducers/blogReducer'\r\nimport Toggleable from '../components/Toggleable'\r\n\r\nconst BlogForm = () => {\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    blogFormRef.current.toggleVisibility()\r\n    dispatch(createBlog({\r\n      title: title === '' ? undefined : title,\r\n      author: author === '' ? undefined : author,\r\n      url: url === '' ? undefined : url,\r\n      })\r\n    )\r\n\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n  return (\r\n    <Toggleable\r\n      buttonLabel='create new blog entry' \r\n      buttonStyle='Create' \r\n      ref={blogFormRef}\r\n    >\r\n    <div>\r\n      <h2>Create new entry</h2>\r\n      <form onSubmit={addBlog}>\r\n        <div>\r\n          <TextField\r\n            label='title'\r\n            value={title}\r\n            onChange={(event) => setTitle(event.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n        <TextField\r\n            label='author'\r\n            value={author}\r\n            onChange={(event) => setAuthor(event.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n        <TextField\r\n            label='url'\r\n            value={url}\r\n            type='url'\r\n            onChange={(event) => setUrl(event.target.value)}\r\n          />\r\n        </div>\r\n        <Button type='submit' startIcon={<Create />}>\r\n          create entry\r\n        </Button>\r\n      </form>\r\n    </div>\r\n    </Toggleable>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { TableRow, TableCell } from '@material-ui/core'\r\n\r\nconst User = ({ username, numberOfBlogs, userId }) => {\r\n  return(\r\n    <TableRow>\r\n      <TableCell>\r\n        <Link to={`/users/${userId}`}>{username}</Link>\r\n      </TableCell>\r\n      <TableCell>\r\n        {numberOfBlogs}\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n  IconButton\r\n} from '@material-ui/core'\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\n\r\nimport User from './User'\r\n\r\nconst UserTable = ({ users }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  return(\r\n    <div className='userTable'>\r\n      <IconButton onClick={() => history.goBack()}>\r\n          <ArrowBack />\r\n      </IconButton>\r\n      <h2>\r\n        Users\r\n      </h2>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>username</TableCell>\r\n              <TableCell>blogs created</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {users.map(user => \r\n              <User\r\n                key={user.id}\r\n                username={user.username}\r\n                numberOfBlogs={user.blogs.length}\r\n                userId={user.id}\r\n                />\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default UserTable","import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\n\r\nconst UserDetails = ({ targetUser }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  if (!targetUser) {\r\n    return (\r\n      <h2>\r\n        user not found\r\n      </h2>\r\n    )\r\n  } else {\r\n    return(\r\n      <div className='userDetails'>\r\n        <IconButton onClick={() => history.goBack()}>\r\n          <ArrowBack />\r\n        </IconButton>\r\n        <h2>\r\n          {targetUser.name ? targetUser.name : targetUser.username}\r\n        </h2>\r\n        <h3>\r\n          added blogs\r\n        </h3>\r\n        <ul>\r\n          {targetUser.blogs.map(blog => \r\n            <li key={blog.id}>\r\n              <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default UserDetails","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { TextField, IconButton } from '@material-ui/core'\r\nimport Create from '@material-ui/icons/Create'\r\nimport ThumbUp from '@material-ui/icons/ThumbUp'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\n\r\nimport { addLike, deleteBlog, addComment } from '../reducers/blogReducer'\r\n\r\nconst BlogDetails = ({ targetBlog, currentUser }) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const updateLikes = () => {\r\n    dispatch(addLike(targetBlog.id))\r\n  }\r\n\r\n  const callRemoveBlog = () => {\r\n    if (window.confirm(\r\n      `Do you really want to delete ${targetBlog.title}, by ${targetBlog.author}?`\r\n    )) {\r\n      dispatch(deleteBlog(targetBlog.id))\r\n    }\r\n  }\r\n\r\n  const handleComment = (event) => {\r\n    event.preventDefault()\r\n    dispatch(addComment(targetBlog.id, comment))\r\n    setComment('')\r\n  }\r\n\r\n  if (!targetBlog) {\r\n    return (\r\n      <h2>\r\n        blog not found\r\n      </h2>\r\n    )\r\n  } else {\r\n    return(\r\n      <div className='blogDetails'>\r\n        <IconButton onClick={() => history.goBack()}>\r\n          <ArrowBack />\r\n        </IconButton>\r\n        <IconButton\r\n            onClick={callRemoveBlog}\r\n            variant='contained'\r\n            aria-label='delete'\r\n            color='secondary'\r\n            style={{\r\n                display: currentUser.username === targetBlog.user.username\r\n                ? ''\r\n                : 'none',\r\n                float: 'right',\r\n              }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n        <h2>\r\n          {targetBlog.title} by {targetBlog.author}\r\n        </h2>\r\n        <p>\r\n          <a href={targetBlog.url}>{targetBlog.url}</a>\r\n          <br />\r\n          {targetBlog.likes} likes \r\n          <IconButton onClick={updateLikes}>\r\n            <ThumbUp />\r\n          </IconButton>\r\n          <br />\r\n          added by {targetBlog.user.name\r\n            ? targetBlog.user.name\r\n            : targetBlog.user.username\r\n            }\r\n          <br />\r\n          \r\n        </p>\r\n        <h3>\r\n          Comments\r\n        </h3>\r\n        <form onSubmit={handleComment}>\r\n          <TextField\r\n            label='comment'\r\n            value={comment}\r\n            onChange={(event) => setComment(event.target.value)}\r\n          />\r\n          <IconButton>\r\n            <Create />\r\n          </IconButton>\r\n        </form>\r\n        <ul>\r\n          {targetBlog.comments.map((comment, index) => {\r\n            return(\r\n              <li key={index}>\r\n                {comment}\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogDetails","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getOne = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, getOne }","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n} from 'react-router-dom'\r\n\r\nimport { Container } from '@material-ui/core'\r\n\r\nimport Menu from './components/Menu'\r\nimport BlogList from './components/BlogList'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport UserTable from './components/UserTable'\r\nimport UserDetails from './components/UserDetails'\r\nimport BlogDetails from './components/BlogDetails'\r\n\r\nimport blogService from './services/blogs'\r\nimport userService from './services/users'\r\n\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { setUser } from './reducers/userReducer'\r\n\r\nconst App = () => {\r\n\r\n  const [users, setUsers] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const usersResponse = await userService.getAll()\r\n      setUsers(usersResponse)\r\n  }\r\n    fetchUsers()\r\n  }, [])\r\n\r\n  const matchUser = useRouteMatch('/users/:id')\r\n  const targetUser = matchUser\r\n    ? users.find(user => {\r\n        return(user.id === matchUser.params.id)\r\n      })\r\n    : null\r\n\r\n  let blogs = useSelector(state => state.blogs)\r\n  \r\n  const matchBlog = useRouteMatch('/blogs/:id')\r\n  const targetBlog = matchBlog\r\n    ? blogs.find(blog => {\r\n      return(blog.id === matchBlog.params.id)\r\n    })\r\n    : null\r\n\r\n  let user = useSelector(state => state.user)\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const loggedUser = JSON.parse(loggedUserJSON)\r\n      dispatch(setUser(loggedUser))\r\n      blogService.setToken(loggedUser.token)\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        {user && \r\n          <Menu user={user} />\r\n        }\r\n        <Notification />\r\n        <div>\r\n          {!user &&\r\n            <LoginForm />\r\n          }\r\n          {user &&\r\n            <>\r\n              <h2>Blog App</h2>\r\n              <Switch>\r\n                <Route path='/users/:id'>\r\n                  <UserDetails targetUser={targetUser} />\r\n                </Route>\r\n                <Route path='/users'>\r\n                  <UserTable users={users}/>\r\n                </Route>\r\n                <Route path='/blogs/:id'>\r\n                  <BlogDetails targetBlog={targetBlog} currentUser={user} />\r\n                </Route>\r\n                <Route path='/'>\r\n                  <BlogForm />\r\n                  <BlogList user={user} />\r\n                </Route>\r\n              </Switch>\r\n            </>\r\n          }\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport blogReducer from '../reducers/blogReducer'\r\nimport notificationReducer from '../reducers/notificationReducer'\r\nimport userReducer from '../reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notification: notificationReducer,\r\n  user: userReducer,\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport App from './App'\r\nimport store from './components/store'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root'))"],"sourceRoot":""}